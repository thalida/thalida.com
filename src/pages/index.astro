---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { COLLECTION_NAMES } from "../content.config";
import Layout from "../layouts/Layout.astro";

let posts = [];
for (const collection of COLLECTION_NAMES as const) {
  const collectionPosts = await getCollection(collection);
  posts = posts.concat(collectionPosts);
}

posts.sort((a, b) => {
  const dateA =
    new Date(a.data.updatedOn).getTime() ||
    new Date(a.data.publishedOn).getTime();
  const dateB =
    new Date(b.data.updatedOn).getTime() ||
    new Date(b.data.publishedOn).getTime();

  return dateB - dateA; // Sort in descending order
});

interface Props {
  entry: CollectionEntry<"food" | "links" | "tech" | "craft">;
}
---

<script src="../components/live-window" />

<script>
  setTimeout(() => {
    const el = document.getElementById('top-window');
    if (el) {
      const date = new Date();
      date.setHours(20, 50, 0);
      el.config = {
        useLiveWeather: true,
        useLiveTime: true,
        now: date,
        skybox: {
          enableHTMLTheme: true,
        },
        clock: {
          // format: "digital",
          // showSeconds: false,
        },
        percipitation: {
          enabled: true,
          // percipitationType: "snow",
          intensity: 1,
        },
      };
    }
  }, 10);
</script>

<Layout>
  <div class="p-4">
    <div class="relative grid grid-cols-5 gap-4 auto-rows-[95vh]">
      <div class="flex overflow-hidden rounded-3xl col-span-5">
        <live-window id="top-window" class="w-full h-full"></live-window>
      </div>

        <div class="absolute inset-4 grid grid-cols-4 gap-2 h-16 overflow-hidden rounded-2xl bg-white backdrop-blur-md">
        <!-- <div class="hh flex bg-gray-50/50 dark:bg-gray-900/50 p-4 rounded-3xl col-span-2">
          me + links
        </div>
        <div class="hh flex bg-gray-50/50 dark:bg-gray-900/50 p-4 rounded-3xl col-span-2">
          weather + controls
        </div> -->
      </div>
    </div>
    <div class="grid grid-cols-4 gap-4 mt-4">
      {
        posts.map((post) => (
          <div class="flex bg-white p-4 rounded-4xl overflow-clip  aspect-square">
            {post.collection === "links" ? (
              <a href={`/${post.collection}/${post.id}/`}>{post.id}</a>
            ) : (
              <a href={`/${post.collection}/${post.id}/`}>
                {post.data.title || post.id}
              </a>
            )}
          </div>
        ))
      }
    </div>
  </div>
</Layout>
