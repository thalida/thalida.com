---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from 'astro:assets';
import { COLLECTION_NAMES } from "../content.config";
import Layout from "../layouts/Layout.astro";
import meImage from "../assets/images/me.png";

let posts = [];
for (const collection of COLLECTION_NAMES as const) {
  const collectionPosts = await getCollection(collection);
  posts = posts.concat(collectionPosts);
}

posts.sort((a, b) => {
  const dateA =
    new Date(a.data.updatedOn).getTime() ||
    new Date(a.data.publishedOn).getTime();
  const dateB =
    new Date(b.data.updatedOn).getTime() ||
    new Date(b.data.publishedOn).getTime();

  return dateB - dateA; // Sort in descending order
});

interface Props {
  entry: CollectionEntry<"food" | "links" | "tech" | "craft">;
}
---

<script src="../components/live-window"></script>

<script>
  import { merge } from "lodash";
  import type { ILiveWindowSceneConfig } from "../components/live-window/types";

  document.documentElement.classList.add("loading");

  const defaultSettings: ILiveWindowSceneConfig = {
    useLiveWeather: true,
    useLiveTime: true,
    overrideTime: undefined,
    overrideWeather: undefined,
    clockFormat: "analog",
  };

  const scene = document.getElementById("main-window");
  const form = document.getElementById("scene-controls-form");

  document.addEventListener("DOMContentLoaded", setup);

  scene.addEventListener("ready", () => {
    document.documentElement.classList.remove("loading");
  });

  form.addEventListener("reset", (event) => {
    event.preventDefault();
    localStorage.removeItem("live-window-custom-settings");
    scene.updateConfig(defaultSettings);
    syncFieldValues();
    toggleCustomInputs();
  });

  form.addEventListener("change", (event) => {
    const target = event.target as HTMLInputElement | HTMLSelectElement;
    if (target.name === "use-live-time" || target.name === "use-live-weather") {
      toggleCustomInputs();
    }
  });

  form.addEventListener("submit", (event) => {
    event.preventDefault();

    toggleCustomInputs();

    const formData = new FormData(form);
    const useLiveTime = formData.get("use-live-time") === "on";
    const useLiveWeather = formData.get("use-live-weather") === "on";
    const clockFormat = formData.get("clock-format") as "digital" | "analog";

    let overrideTime = formData.get("override-time");
    if (!useLiveTime && overrideTime) {
      const today = new Date();
      const timeParts = formData.get("override-time").split(":");
      today.setHours(parseInt(timeParts[0]), parseInt(timeParts[1]), 0);
      overrideTime = today
    }
    overrideTime = overrideTime ? new Date(overrideTime) : null;

    let overrideWeather = formData.get("override-weather");
    if (!useLiveWeather && overrideWeather) {
      overrideWeather = parseInt(overrideWeather, 10);
    } else {
      overrideWeather = null;
    }

    const config: ILiveWindowSceneConfig = {
      useLiveWeather,
      useLiveTime,
      overrideTime,
      overrideWeather,
      clockFormat,
    };
    scene.updateConfig(config);
    localStorage.setItem("live-window-custom-settings", JSON.stringify(config));
    syncFieldValues();
  });

  function setup() {
    const storedSettings = localStorage.getItem("live-window-custom-settings") || "{}";
    const settings = merge({}, defaultSettings, JSON.parse(storedSettings));

    if (settings.overrideTime) {
      settings.overrideTime = new Date(settings.overrideTime);
    }

    if (settings.overrideWeather) {
      settings.overrideWeather = parseInt(settings.overrideWeather, 10);
    }

    scene.updateConfig(settings);
    syncFieldValues();
    toggleCustomInputs();
  }

  function syncFieldValues() {
    const $useLiveWeather = form.querySelector("[name='use-live-weather']");
    const $useLiveTime = form.querySelector("[name='use-live-time']");
    const $overrideTime = form.querySelector("[name='override-time']");
    const $overrideWeather = form.querySelector("[name='override-weather']");
    const $clockFormat = form.querySelector("[name='clock-format']");

    $useLiveWeather.checked = scene.config.useLiveWeather;
    $useLiveTime.checked = scene.config.useLiveTime;
    $clockFormat.value = scene.config.clockFormat;
    $overrideTime.value = scene.config.overrideTime
      ? scene.config.overrideTime.toTimeString().slice(0, 5) // Format as HH:MM
      : "";
    $overrideWeather.value = scene.config.overrideWeather || "";
  }

  function toggleCustomInputs() {
    const $useLiveWeather = form.querySelector("[name='use-live-weather']");
    const $useLiveTime = form.querySelector("[name='use-live-time']");
    const $overrideTime = form.querySelector("[name='override-time']");
    const $overrideWeather = form.querySelector("[name='override-weather']");
    const $clockFormat = form.querySelector("[name='clock-format']");

    $overrideTime.disabled = $useLiveTime.checked;
    if ($useLiveTime.checked) {
      $overrideTime.value = "";
    } else if (!$overrideTime.value) {
      const now = new Date();
      now.setHours(now.getHours() + 6); // Set to one hour later
      $overrideTime.value = now.toTimeString().slice(0, 5); // Format as HH:MM
    }

    $overrideWeather.disabled = $useLiveWeather.checked;
    if ($useLiveWeather.checked) {
      $overrideWeather.value = "";
    } else if (!$overrideWeather.value) {
      $overrideWeather.value =  10; // Default to Rain
    }
  }
</script>

<Layout>
  <div class="grid gap-8  p-8 grid-cols-1 sm:grid-cols-4 2xl:grid-rows-4 2xl:grid-cols-5 2xl:min-h-[60rem] 2xl:max-h-[max(60rem,100vh)]">

    <!-- TILE | thalida.com -->
    <div class="flex flex-col justify-between relative bg-secondary-200 dark:bg-secondary-900 p-4 rounded-3xl row-span-1 overflow-hidden sm:col-span-2 sm:-order-1 2xl:col-span-1 2xl:order-0">
      <p class="font-brand text-4xl text-secondary-900 dark:text-secondary-200">thalida.com</p>

      <Image
        src={meImage}
        alt="Thalida"
        class="absolute right-4 bottom-0 object-contain object-bottom-right size-5/6 pointer-events-none"
        loading="lazy"
      />

      <div class="relative text-secondary-50 mix-blend-color-dodge  mt-4 font-bold">
        <p><span>created</span> <span class="font-black">2007</span></p>
        <p><span>updated</span> <span class="font-black">2025</span></p>
        <p><span>version</span> <span class="font-black">#25</span></p>
      </div>
    </div>

    <!-- TILE | live scene -->
    <div class="pointer-events-none relative flex rounded-3xl h-[70svh] overflow-hidden col-span-1 sm:col-span-4 lg:h-[50rem] lg:col-span-3 lg:row-span-4 2xl:h-full">
      <livewindow-scene
        id="main-window"
        group="main-window"
        class="h-full w-full" />
    </div>

    <!-- TILE GROUP | live scene data/actions -->
    <div class="grid gap-8 grid-cols-subgrid col-span-1 sm:col-span-4 lg:grid-rows-subgrid lg:col-span-1 lg:row-span-4">

      <!-- TILE | live scene data -->
      <div class="flex flex-col justify-between bg-transparent rounded-3xl sm:col-span-2 lg:col-span-1 lg:row-span-1 grow-0 overflow-hidden">
        <div class="hidden loading:block grow p-4 bg-white dark:bg-black rounded-3xl">
          Loading...
        </div>
        <div class="loading:hidden grow rounded-3xl flex flex-col justify-around overflow-hidden">
          <div class="flex flex-col items-center justify-evenly p-4 gap-2 grow bg-white dark:bg-black">
            <span class="text-secondary-500 dark:text-secondary-400 text-4xl font-brand font-bold" data-group="main-window" data-temperature></span>
            <span class="text-secondary-700 dark:text-secondary-600 text-lg font-medium capitalize" data-group="main-window" data-weather></span>
          </div>
          <div class="flex flex-row items-center justify-between bg-gradient-to-r  from-sky-200 to-violet-200 dark:from-sky-400 dark:to-violet-400">
            <div class="flex flex-row items-center justify-start grow p-2 gap-2 truncate" title="Sunrise time">
              <i class="fa-solid fa-sun"></i>
              <span data-group="main-window" data-sunrise></span>
            </div>
            <div class="flex flex-row items-center justify-end grow p-2 gap-2 truncate" title="Sunset time">
              <span data-group="main-window" data-sunset></span>
              <i class="fa-solid fa-moon"></i>
            </div>
          </div>
          <div class="flex flex-col items-center justify-center p-2 bg-surface-50 dark:bg-surface-950 text-xs gap-1">
            <p class="w-full text-center truncate"><span data-group="main-window" data-location></span></p>
            <p><a href="https://openweathermap.org/" class="text-surface-500" target="_blank">OpenWeather</a></p>
          </div>
        </div>
      </div>

      <!-- TILE | live scene controls -->
      <div class="flex bg-surface-50 dark:bg-surface-950 p-4 rounded-3xl sm:col-span-2 lg:col-span-1 lg:row-span-3">
        <div class="hidden loading:block grow">
          Loading...
        </div>
        <div class="loading:hidden flex flex-col grow">
          <div class="mb-4">
            <h2 class="text-lg font-bold">
              <i class="fa-solid fa-sliders"></i>
              Scene Controls
            </h2>
            <p class="text-sm mt-1">
              Play around with the live scene settings below to customize your experience.
            </p>
            <p class="text-sm mt-1">
              <a href="/learn-more" class="text-surface-500">How does this work?</a>
            </p>
          </div>

          <form id="scene-controls-form" class="flex flex-col justify-between gap-4 grow">
            <div class="flex flex-col gap-4 grow">
              <div>
                <label for="scene-input__clock-format" class="block text-sm/6 font-medium">Clock Style</label>
                <div class="mt-2 grid grid-cols-1">
                  <select id="scene-input__clock-format" name="clock-format" class="col-start-1 row-start-1 w-full appearance-none rounded-lg bg-white dark:bg-black py-1.5 pl-3 pr-8 text-base outline -outline-offset-1 outline-surface-300 dark:outline-surface-900 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-500 sm:text-sm/6">
                    <option value="analog">Analog</option>
                    <option value="digital">Digital</option>
                  </select>
                  <svg class="pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-surface-500 sm:size-4" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" data-slot="icon">
                    <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
                  </svg>
                </div>
              </div>

              <div class="flex flex-col gap-1">
                <div class="peer/time flex gap-3">
                  <div class="flex h-6 shrink-0 items-center">
                    <div class="group grid size-4 grid-cols-1">
                      <input id="scene-input__use-live-time" name="use-live-time" type="checkbox" class="col-start-1 row-start-1 appearance-none rounded border border-surface-300 dark:border-surface-900 bg-white dark:bg-black checked:border-primary-500 checked:bg-primary-500 indeterminate:border-primary-500 indeterminate:bg-primary-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-500 disabled:border-surface-300 disabled:bg-surface-100 disabled:checked:bg-surface-100 forced-colors:appearance-auto" />
                      <svg class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25" viewBox="0 0 14 14" fill="none">
                        <path class="opacity-0 group-has-[:checked]:opacity-100" d="M3 8L6 11L11 3.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path class="opacity-0 group-has-[:indeterminate]:opacity-100" d="M3 7H11" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                      </svg>
                    </div>
                  </div>
                  <div class="text-sm/6 w-full">
                    <label for="scene-input__use-live-time" class="font-medium">Use Current Time?</label>
                  </div>
                </div>
                <div class="flex flex-col gap-1 w-full peer-has-[:checked]/time:hidden mb-2">
                  <label for="scene-input__override-time" class="block text-sm/6 font-medium">Custom Time</label>
                  <div class="grow">
                    <input type="time" name="override-time" id="scene-input__override-time" class="block w-full rounded-md bg-white dark:bg-black px-3 py-1.5 text-base outline -outline-offset-1 outline-surface-300 dark:outline-surface-900 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-600 sm:text-sm/6" />
                  </div>
                </div>
              </div>

              <div class="flex flex-col gap-1">
                <div class="peer/weather flex gap-3">
                  <div class="flex h-6 shrink-0 items-center">
                    <div class="group grid size-4 grid-cols-1">
                      <input id="scene-input__use-live-weather" name="use-live-weather" type="checkbox" class="col-start-1 row-start-1 appearance-none rounded border border-surface-300 dark:border-surface-900 bg-white dark:bg-black checked:border-primary-500 checked:bg-primary-500 indeterminate:border-primary-500 indeterminate:bg-primary-500 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-500 disabled:border-surface-300 disabled:bg-surface-100 disabled:checked:bg-surface-100 forced-colors:appearance-auto" />
                      <svg class="pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25" viewBox="0 0 14 14" fill="none">
                        <path class="opacity-0 group-has-[:checked]:opacity-100" d="M3 8L6 11L11 3.5" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path class="opacity-0 group-has-[:indeterminate]:opacity-100" d="M3 7H11" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                      </svg>
                    </div>
                  </div>
                  <div class="text-sm/6 w-full">
                    <label for="scene-input__use-live-weather" class="font-medium">Use Current Weather?</label>
                  </div>
                </div>
                <div class="flex flex-col gap-1 w-full peer-has-[:checked]/weather:hidden mb-2">
                  <label for="scene-input__override-weather" class="block text-sm/6 font-medium">Custom Weather</label>
                  <div class="grow grid grid-cols-1">
                    <select id="scene-input__override-weather" name="override-weather" class="col-start-1 row-start-1 w-full appearance-none rounded-lg bg-white dark:bg-black py-1.5 pl-3 pr-8 text-base outline -outline-offset-1 outline-surface-300 dark:outline-surface-900 focus:outline-2 focus:-outline-offset-2 focus:outline-primary-500 sm:text-sm/6">
                      <option value="">Select Weather</option>
                      <option value="1">Clear Sky</option>
                      <option value="2">Few Clouds</option>
                      <option value="3">Scattered Clouds</option>
                      <option value="4">Broken Clouds</option>
                      <option value="9">Shower Rain</option>
                      <option value="10">Rain</option>
                      <option value="11">Thunderstorm</option>
                      <option value="13">Snow</option>
                      <option value="50">Mist</option>
                    </select>
                    <svg class="pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-surface-500 sm:size-4" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true" data-slot="icon">
                      <path fill-rule="evenodd" d="M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
                    </svg>
                  </div>
                </div>
              </div>
            </div>

            <div class="flex flex-col gap-1">
              <button type="submit" class="cursor-pointer bg-primary-500 text-white p-2 rounded-lg hover:bg-primary-600 transition-colors font-medium text-sm">Save</button>
              <button type="reset" class="cursor-pointer bg-gray-300 dark:bg-gray-700 text-black dark:text-white p-2 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors font-medium text-sm">Reset</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- TILE | about me -->
    <div
      class="flex flex-col justify-between bg-surface-50 dark:bg-surface-950 rounded-3xl row-span-2 overflow-hidden sm:col-span-2 sm:-order-1 2xl:col-span-1 2xl:order-0"
    >
      <!-- SUBSECTION | bio and introduction -->
      <div class="flex flex-col gap-2 p-4 bg-white dark:bg-black flex-grow">
        <p class="text-lg font-bold"><span class="text-secondary-700 dark:text-secondary-300" data-group="main-window" data-greeting></span> My name's Thalida, I'm a Product Engineer based in New York.</p>
        <p>This domain is my homebase on the world wide web: a space to experiment, explore, and catalog my learnings &amp; adventures.</p>
        <a href="/about" class="self-end text-surface-500">learn more <i class="fa fa-arrow-right text-sm ml-1"></i></a>
      </div>

      <!-- SUBSECTION | versions -->
      <div class="flex flex-col gap-2 p-4 grow">
        <p>Explore all of the previous versions and experiments of thalida.com!</p>
        <a href="/versions" class="self-end text-surface-500"><span>explore</span> <i class="fa fa-arrow-right text-sm ml-1"></i></a>
      </div>
    </div>

    <!-- TILE | social links -->
    <div
      class="flex flex-col bg-surface-50 dark:bg-surface-950 p-4 rounded-3xl row-span-1 gap-2 justify-around sm:col-span-2 sm:-order-1 2xl:col-span-1 2xl:order-0"
    >
      <a href="https://linkedin.com/in/thalida" class="flex items-center gap-2">
        <i class="fa-linkedin fa-brands fa-lg text-blue-500"></i>
        <span>linkedin.com/in/thalida</span>
      </a>
      <a href="https://github.com/thalida" class="flex items-center gap-2">
        <i class="fa-github fa-brands fa-lg text-dark dark:text-white"></i>
        <span>github.com/thalida</span>
      </a>
      <a href="https://dribbble.com/thalida" class="flex items-center gap-2">
        <i class="fa-dribbble fa-brands fa-lg text-pink-500"></i>
        <span>dribbble.com/thalida</span>
      </a>
      <a href="mailto:hello@thalida.com?subject=Hello%20from%20your%20website!" class="flex items-center gap-2">
        <i class="fa-envelope fa-solid fa-lg text-surface-500"></i>
        <span>hello@thalida.com</span>
      </a>
    </div>
  </div>


  <div class="p-8">
    <div class="grid grid-cols-1 sm:grid-cols-2 2xl:grid-cols-4 gap-8 mt-8">
      <div class="col-span-full">Header</div>
      {
        posts.map((post) => (
          <a
            href={`/${post.collection}/${post.id}/`}
            class="flex bg-surface-50 dark:bg-surface-950 p-4 rounded-4xl overflow-clip  aspect-3/2"
          >
            {post.data.title || post.id}
          </a>
        ))
      }
    </div>
  </div>
</Layout>
