---
import { COLLECTION_CHOICES, collectionOrder, collectionMeta } from "../content.config";
---


<script src="./live-window"></script>

<script>
  import { merge, isEqual } from "lodash";
  import type { ILiveWindowSceneConfig } from "../../components/live-window/types";

  document.documentElement.classList.add("loading");

  const defaultSettings: ILiveWindowSceneConfig = {
    useLiveWeather: true,
    useLiveTime: true,
    overrideTime: null,
    overrideWeather: null,
    clockFormat: "digital",
    clockEnabled: false,
    cloudsEnabled: false,
    lightningEnabled: false,
    percipitationEnabled: false,
    skyboxEnabled: true,
  };

  const scene = document.getElementById("main-window");

  document.addEventListener("DOMContentLoaded", handleInit);

  scene.addEventListener("ready", () => {
    document.documentElement.classList.remove("loading");
  });

  function getSettings() {
    const storedSettings = JSON.parse(localStorage.getItem("live-window-custom-settings") || "{}");
    const settings = {...defaultSettings };
    settings.useLiveTime = storedSettings.useLiveTime !== undefined ? storedSettings.useLiveTime : defaultSettings.useLiveTime;
    settings.useLiveWeather = storedSettings.useLiveWeather !== undefined ? storedSettings.useLiveWeather : defaultSettings.useLiveWeather;
    settings.overrideTime = storedSettings.overrideTime !== undefined ? storedSettings.overrideTime : defaultSettings.overrideTime;
    settings.overrideWeather = storedSettings.overrideWeather !== undefined ? storedSettings.overrideWeather : defaultSettings.overrideWeather;
    if (settings.overrideWeather) {
      settings.overrideWeather = parseInt(settings.overrideWeather, 10);
    }

    return settings;
  }

  function handleInit() {
    const settings = getSettings();
    scene.updateConfig(settings);
  }
</script>

<header class="relative px-8 py-4 w-full h-full flex flex-row items-center justify-between rounded-3xl overflow-hidden">
  <div class="absolute top-0 left-0 w-full h-full">
    <livewindow-scene id="main-window" group="main-window" />
  </div>

  <nav class="grow relative flex flex-row items-center justify-between">
    <div class="flex flex-row items-center justify-start gap-8">
      <a href="/" class="relative flex flex-row items-center justify-start font-brand text-2xl lg:text-4xl text-secondary-100 mix-blend-color-dodge">
        thalida.com
      </a>
    </div>
    <div class="relative flex flex-col sm:flex-row flex-wrap gap-2 sm:gap-4 lg:gap-8 grow items-end sm:items-center justify-end">
      {collectionOrder.map((collectionName) => {
        const collection = collectionMeta[collectionName];
        return (
          <a href={`/${collectionName}/`} class={`flex flex-col items-center justify-center font-bold text-base lg:text-xl text-secondary-100 mix-blend-color-dodge`}>
            {collection.title}
          </a>
        );
      })}
      <a href={`/about/`} class={`flex flex-col items-center justify-center font-bold text-base lg:text-xl text-secondary-100 mix-blend-color-dodge`}>
        About
      </a>
    </div>
  </nav>
</header>
