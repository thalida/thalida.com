---
import "../styles/global.css";
---

<div id="window-container"></div>

<script>
  import * as Matter from "matter-js";

  init();

  function init() {
    // module aliases
    var Engine = Matter.Engine,
      Render = Matter.Render,
      Runner = Matter.Runner,
      Bodies = Matter.Bodies,
      Body = Matter.Body,
      Composite = Matter.Composite,
      Events = Matter.Events,
      Common = Matter.Common;

    // create an engine
    var engine = Engine.create();
    var world = engine.world;

    var container = document.getElementById("window-container");

    if (!container) {
      console.error("Container element not found");
      return;
    }

    // create a renderer
    var render = Render.create({
      element: container,
      engine: engine,
      options: {
        width: 800,
        height: 600,
        wireframes: true,
        showAxes: true,
        showAngleIndicator: true,
        showCollisions: true,
      },
    });

    Render.run(render);

    // create runner
    var runner = Runner.create();
    Runner.run(runner, engine);

    Composite.add(world, [
      // top wall
      Bodies.rectangle(400, 0, 800, 20, {
        isStatic: true,
        render: { fillStyle: "red" },
      }),
      // bottom wall
      Bodies.rectangle(400, 600, 800, 20, {
        isStatic: true,
        render: { fillStyle: "yellow" },
      }),
      // right wall
      Bodies.rectangle(800, 300, 20, 600, {
        isStatic: true,
        render: { fillStyle: "blue" },
      }),
      // left wall
      Bodies.rectangle(0, 300, 20, 600, {
        isStatic: true,
        render: { fillStyle: "green" },
      }),
    ]);

    var hourBody = Bodies.rectangle(400 - 100, 300, 200, 20, {
      isStatic: true,
      render: { fillStyle: "pink" },
    });
    Body.setCentre(hourBody, { x: 100, y: 0 }, true);

    var minuteBody = Bodies.rectangle(400 - 125, 300, 250, 20, {
      isStatic: true,
      render: { fillStyle: "pink" },
    });
    Body.setCentre(minuteBody, { x: 125, y: 0 }, true);

    Composite.add(world, [hourBody, minuteBody]);

    // var hourDegrees = 90;
    // var minuteDegrees = 90;
    // Body.setAngle(hourBody, (Math.PI * hourDegrees) / 180);
    // Body.setAngle(minuteBody, (Math.PI * minuteDegrees) / 180);

    // run the renderer
    Render.run(render);

    Events.on(engine, "beforeUpdate", function (event) {
      var engine = event.source;

      const currentTime = Date.now();
      const hour = new Date(currentTime).getHours() % 12;
      const minute = new Date(currentTime).getMinutes();
      const second = new Date(currentTime).getSeconds();
      const degreesPerHour = 360 / 12;
      const degreesPerMinute = 360 / 60;
      const hourDegrees =
        (hour % 12) * degreesPerHour + (minute / 60) * degreesPerHour;
      const minuteDegrees = minute * degreesPerMinute;
      const offset = 90; // Offset to align with the top of the clock
      Body.setAngle(hourBody, (Math.PI * (hourDegrees + offset)) / 180);
      Body.setAngle(minuteBody, (Math.PI * (minuteDegrees + offset)) / 180);
    });
  }
</script>
